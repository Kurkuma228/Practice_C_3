using ДзC_.classes;

namespace homework
{
    class Metodichka1
    {
        static void Main()
        {
            //Упражнение 11.1
            Console.WriteLine("Упражнение 11.1 - 11.2");
            Task1();

            //Домашнее задание 11.1
            Console.WriteLine("Домашнее задание 11.1");
            Task2();
        }

        /*Упражнение 11.1 Создать новый класс, который будет являться фабрикой объектов класса
        банковский счет. Изменить модификатор доступа у конструкторов класса банковский счет на
        internal. Добавить в фабричный класс перегруженные методы создания счета CreateAccount,
        которые бы вызывали конструктор класса банковский счет и возвращали номер созданного
        счета. Использовать хеш-таблицу для хранения всех объектов банковских счетов в
        фабричном классе. В фабричном классе предусмотреть метод закрытия счета, который
        удаляет счет из хеш-таблицы (методу в качестве параметра передается номер банковского
        счета). Использовать утилиту ILDASM для просмотра структуры классов.*/
        static void Task1()
        {
            BankAccFactory factory = new BankAccFactory();

            Guid account1 = factory.CreateAccount();
            Guid account2 = factory.CreateAccount("Сергей");

            Console.WriteLine($"Счет {account1}: {factory.GetAcc(account1).AccHolder}");
            Console.WriteLine($"Счет {account2}: {factory.GetAcc(account2).AccHolder}");
            
            factory.AccClouser(account2);
            Console.WriteLine("Второй счет закрыт");
        }

        /*Домашнее задание 11.1 Для реализованного класса из домашнего задания 7.1 создать
        новый класс Creator, который будет являться фабрикой объектов класса здания. Для этого
        изменить модификатор доступа к конструкторам класса, в новый созданный класс добавить
        перегруженные фабричные методы CreateBuild для создания объектов класса здания. В
        классе Creator все методы сделать статическими, конструктор класса сделать закрытым. Для
        хранения объектов класса здания в классе Creator использовать хеш-таблицу. Предусмотреть
        возможность удаления объекта здания по его уникальному номеру из хеш-таблицы. Создать
        тестовый пример, работающий с созданными классами.*/
        static void Task2()
        {
            
        }
    }
}